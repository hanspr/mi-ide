filetype: go

detect:
    filename: "\\.go$"

rules:
    # Conditionals and control flow
    - function: "func \\w+"
    - function: "\\w+\\(.*?\\)"
    - default: "\\(.*?\\)"
    - function: ", \\w+\\("
    - label: "goto \\w+"
    - statement: "goto "
    - statement: "\\b(break|case|continue|default|go|goto|range|return)\\b"
    - statement: "\\b(else|for|if|switch)\\b"
    - statement: "\\b(package|import|const|var|type|struct|func|go|defer|iota)\\b"
    - symbol.operator: "[-+/*=<>!~%&|^]|:="

      # Types
    - symbol: "(,|\\.)"
    - type.keyword: "\\b(u?int(8|16|32|64)?|float(32|64)|complex(64|128))\\b"
    - type.keyword: "\\b(uintptr|byte|rune|string|interface|bool|map|chan|error|struct)\\b"
    - constant.bool: "\\b(true|false|nil)\\b"

      # Methods
    - method: "\\.\\w+\\b"
    - normal: "\\."
      # Brackets
    - symbol.brackets: "(\\{|\\})"
    - symbol.brackets: "(\\(|\\))"
    - symbol.brackets: "(\\[|\\])"

      # Numbers and strings
    - constant.number: "\\b([0-9]+|0x[0-9a-fA-F]*)\\b|'.'"
    - constant.string: "\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\""
    - constant.string: "\'.*?\'"
    - constant.string: "\\`.*?\\`"
    - include: "comments"
    - label: "^[\\t ]*\\w+:$"
    - default: "^[\\t ]+"
    - comment: "//.+$"

    - comment:
        start: "^\\s*/\\*"
        end: "\\*/"
        rules:
            - todo: "(TODO|XXX|FIXME):?"

    - type.keyword:
        start: "struct {"
        end: "}"
        rules:
            - default: "^\\s+\\w+\\b"
            - comment: " //.+$"
