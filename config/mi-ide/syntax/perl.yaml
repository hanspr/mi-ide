filetype: perl

detect:
    filename: "(\\.pl|\\.pm|\\.cgi)$"
    header: "#!.+?perl"

rules:
    - function: "sub \\w+"
    - function: "\\w+\\(.*?\\)"
    - function: "->\\w+"
    - label: "goto \\w+"
    - statement: "goto "
    - constant.number: "[0-9]+(\\.[0-9]+)?([Ee][\\-\\+]?[0-9]+)?|undef"
    - symbol.operator: "\\||#|/"
    - symbol: "\\+\\+|\\-\\-|[!=]\\~|\\*\\*|\\!|\\~|\\|\\+|\\-|\\*|%|<<|>>|<|>|[<>=!]=|<=>|&|\\|\\^|&&|\\.\\.|\\.\\.\\.|\\?|:|=|\\*\\*=|\\+=|\\*=|&=|\\|\\||\\.=|%=|\\^=|\\bx\\b"
    - statement: "undef [\\w\\$]"
    - statement: "\\b(break|continue|do|each|else|elsif|foreach|for|if|last|local|my|next|our|package|return|sub|unless|until|while|__FILE__|__LINE__|__PACKAGE__|require)\\b"
    - statement: "\\b(sprintf|printf|print|accept|alarm|atan2|bind|binmode|bless|caller|chdir|chmod|chomp|chop|chown|chroot|closedir|close|connect|crypt|dbmclose|dbmopen|defined|delete|dump|endgrent|endhostent|endnetent|endprotoent|endpwent|endservent|eval|exec|exists|exit|fcntl|fileno|flock|fork|format|formline|getc|getgrent|getgrgid|getgrnam|gethostbyaddr|gethostbyname|gethostent|getlogin|getnetbyaddr|getnetbyname|getnetent|getpeername|getpgrp|getppid|getpriority|getprotobyname|getprotobynumber|getprotoent|getpwent|getpwnam|getpwuid|getservbyname|getservbyport|getservent|getsockname|getsockopt|glob|gmtime|goto|grep|hex|import|index|ioctl|join|keys|kill|lcfirst|lc|length|link|listen|localtime|log|lstat|map|mkdir|msgctl|msggetmsgrcv|msgsnd|new|oct|opendir|open|ord|pack|pipe|pop|pos|prototype|push|quotemeta|rand|readdir|readlink|read|recv|redo|rename|reset|reverse|rewinddir|rindex|rmdir|scalar|seekdir|seek|select|semctl|semget|semop|send|setgrent|sethostent|setnetent|setpgrp|setpriority|setprotoent|setpwent|setservent|setsockopt|shift|hmctl|shmget|shmread|shmwrite|shutdown|sin|sleep|socketpair|socket|sort|splice|split|sqrt|srand|stat|study|substr|symlink|syscall|sysread|sysseek|system|syswrite|telldir|tell|tied|tie|times|time|truncate|ucfirst|umask|unlink|unpack|unshift|untie|utime|values|waitpid|wantarray|warn|write|wait|abs|chr|cos|die|exp|uc|ref|int|each|eof|vec)\\b"
    - symbol.operator: "\\b(x|lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b"
    - constant: "\\{\\w+\\}"
    - symbol.brackets: "(\\{|\\})"
    - symbol.brackets: "(\\(|\\))"
    - symbol.brackets: "(\\[|\\])"
    - method.other: "\\$?(([\\p{L}\\p{N}_])+(::|->))+"
    - preproc: "use .+?(\\W|qw)$"
    - preproc: "no .+?;$"
    - constant.string: "\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\""
    - constant.string: "qq[“°].*[“°]"
    - statement: "\\b(insert|into|values|update|set|delete|select|from|where|and|or|isnull|join|left|right|outer|as|order by|limit|distinct|on)\\b"
    - identifier.var: "[\\$@%]\\$*[\\p{L}\\p{N}_]*"
    - identifier.var: "\\$+\\{[\\p{L}\\p{N}_]+\\}"
    - symbol: "\\$#[\\p{L}\\p{N}_]+"
    - symbol.tag: "</?[A-Za-z0-9:]+/?[ >]"
    - constant.tag: "&[\\w]{2,5};"
    - constant.string: "\'.*?\'"
    - comment: "[;,][ \\t]+#.*"
    - comment: "^[ \\t]*#.*$"
    - include: "comments"
    - label: "^[\\t ]*\\w+:$"
    - default: "^[\\t ]+"
    - constant.string:
        start: "q’"
        end: "’[\\)\\'\\\"]*?;"
        rules: []
    - default:
        start: "qq[¡”·]"
        end: "[¡”·]\\)?;"
        rules:
            - include: "javascript"

