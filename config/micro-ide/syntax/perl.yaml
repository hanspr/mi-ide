filetype: perl

detect:
    filename: "(\\.pl|\\.pm|\\.cgi)$"
    header: "#!.+?perl"

rules:
    - constant.number: "[0-9]+(\\.[0-9]+)?([Ee][\\-\\+]?[0-9]+)?"
    - type: "\\b(sprintf|printf|print|accept|alarm|atan2|bind|binmode|bless|caller|chdir|chmod|chomp|chop|chown|chroot|closedir|close|connect|crypt|dbmclose|dbmopen|defined|delete|dump|endgrent|endhostent|endnetent|endprotoent|endpwent|endservent|eval|exec|exists|exit|fcntl|fileno|flock|fork|format|formline|getc|getgrent|getgrgid|getgrnam|gethostbyaddr|gethostbyname|gethostent|getlogin|getnetbyaddr|getnetbyname|getnetent|getpeername|getpgrp|getppid|getpriority|getprotobyname|getprotobynumber|getprotoent|getpwent|getpwnam|getpwuid|getservbyname|getservbyport|getservent|getsockname|getsockopt|glob|gmtime|goto|grep|hex|import|index|ioctl|join|keys|kill|lcfirst|lc|length|link|listen|localtime|log|lstat|map|mkdir|msgctl|msggetmsgrcv|msgsnd|new|oct|opendir|open|ord|pack|pipe|pop|pos|prototype|push|quotemeta|rand|readdir|readlink|read|recv|redo|rename|reset|reverse|rewinddir|rindex|rmdir|scalar|seekdir|seek|select|semctl|semget|semop|send|setgrent|sethostent|setnetent|setpgrp|setpriority|setprotoent|setpwent|setservent|setsockopt|shift|hmctl|shmget|shmread|shmwrite|shutdown|sin|sleep|socketpair|socket|sort|splice|split|sqrt|srand|stat|study|substr|symlink|syscall|sysread|sysseek|system|syswrite|telldir|tell|tied|tie|times|time|truncate|ucfirst|umask|undef|unlink|unpack|unshift|untie|utime|values|waitpid|wantarray|warn|write|wait|abs|chr|cos|die|exp|uc|ref|int|each|eof|vec)\\b"
    - statement: "\\b(break|continue|do|each|else|elsif|foreach|for|if|last|local|my|next|our|package|return|sub|unless|until|while|__FILE__|__LINE__|__PACKAGE__|require)\\b"
    - type.keyword: "ReadParse|PrintHeader|SetSystemTime|user_check|Vars"
    - symbol.brackets: "(\\{|\\})"
    - symbol.brackets: "(\\(|\\))"
    - symbol.brackets: "(\\[|\\])"
    - symbol.brackets: "(\\{|\\})"
    - symbol.brackets: "(\\(|\\))"
    - symbol.brackets: "(\\[|\\])"
    - constant.string: "\".*\""
    - symbol.operator: "\\+\\+|\\-\\-|\\*\\*|\\!|\\~|\\|\\+|\\-|[!=]\\~|\\*|/|%|<<|>>|<|>|[<>=!]=|<=>|&|\\|\\^|&&|\\.\\.|\\.\\.\\.|\\?|:|=|\\*\\*=|\\+=|\\*=|&=|\\|\\||\\.=|%=|\\^=|\\bx\\b"
    - symbol.operator: "\\b(x|lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b"
    - symbol.tag: "</?[A-Za-z0-9:]+/?[ >]"
    - identifier.var: "([\\$@%]|\\$\\#)\\$*[a-zA-Z_][a-zA-Z0-9_]*"
    - constant.tag: "&[\\w]{2,5};"
    - todo: "\\$?([A-Za-z0-9_])+(::[A-Za-z0-9_]+)+(->)?"
    - todo: "\\$?[A-Za-z0-9_]+->(execute|(get|fetch)row_hashref|getHash(_ref)?|fnumeric|Alert|Error|equal|connect(db)?|EOF|BOF|move(next|previous|last|first)|itemvalue|recordcount|recordtotal|error_number|hash_quote|update|insert|container_delete|file_delete|upload|set|get|download|file_data|container_connect|setError|OK|redirect|round|fnumeric|fnumeric_hash|UC|str_safe|str_quote|hash_quote|hash_decode|hash_encode|str_decode|str_encode|FileUpload|equal)?"
    - preproc: "use .+?$"
    - constant.string: "\'.*?\'"
    - comment: "^[ \\t]*#.*"
    - comment: ";[ \\t]+#.*"
    - comment: "^#!.*"
    - constant.string:
        start: "q’"
        end: "’[\\)\\'\\\"]*?;"
        rules: []
    - default:
        start: "qq[\\|¡°”]"
        end: "[\\|¡°”][\\)\\'\\\"]*?;"
        rules:
            - constant.number: "\\b[-+]?([1-9][0-9]*|0[0-7]*|0x[0-9a-fA-F]+)([uU][lL]?|[lL][uU]?)?\\b"
            - constant.number: "\\b[-+]?([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)([EePp][+-]?[0-9]+)?[fFlL]?"
            - constant.number: "\\b[-+]?([0-9]+[EePp][+-]?[0-9]+)[fFlL]?"
            - identifier: "[A-Za-z_][A-Za-z0-9_]*[[:space:]]*[(]"
            - symbol.brackets: "(\\{|\\})"
            - symbol.brackets: "(\\(|\\))"
            - symbol.brackets: "(\\[|\\])"
            - symbol.brackets: "(\\{|\\})"
            - symbol.brackets: "(\\(|\\))"
            - symbol.brackets: "(\\[|\\])"
            - symbol.operator: "[-+/*=<>!~%?:&|]"
            - statement: "\\b(async|await|break|case|catch|const|continue|debugger|default|delete|do|else|export|finally)\\b"
            - statement: "\\b(for|function|extends|get|if|import|from|of|instanceof|let|new|return|set)\\b"
            - statement: "\\b(super|switch|this|throw|try|typeof|var|void|while|with|yield|alert)\\b"
            - error: "\\b(enum|implements|interface|package|private|protected|public)"
            - constant: "\\b(null|undefined|NaN)\\b"
            - constant: "\\b(true|false)\\b"
            - type: "\\b(Array|Boolean|Date|Enumerator|Error|Function|Math)\\b"
            - type: "\\b(Number|Object|RegExp|String)\\b"
            - constant: "\\\\[0-7][0-7]?[0-7]?|\\\\x[0-9a-fA-F]+|\\\\[bfnrt'\"\\?\\\\]"
            - comment: "^#!.*/(env +)?node( |$)"
            - identifier.var: "([\\$@%]|\\$\\#)\\$*[a-zA-Z_][a-zA-Z0-9_]*"
            - comment: "^//.*$"
            - comment: "[ \\t;]// .*$"
            - symbol.tag: "</?[A-Za-z0-9:]+/?[ >]"
            - special: "&[^;[[:space:]]]*;"
            - constant.tag: "&[\\w]{2,5};"
            - identifier.var: "([\\$@%]|\\$\\#)\\$*[a-zA-Z_][a-zA-Z0-9_]*"
            - symbol: "[:=]"
            - constant.string: "'.*?'"
            - constant.string: "\".*?\""
            - type.keyword: "(alt|bgcolor|(margin)?height|href|id|label|longdesc|name|on(click|focus|load|mouseover|key(press|up|down)|blur|change|submit|(un)?load)|size|(col|row)?span|src|target|type|value|(margin)?width|cell(spacing|padding)|border|class|method|(enc)?type|maxlength|style|language|action)="
            - constant.number: "(?i)#[0-9A-F]{6,6}"
            - constant.string.url: "(ftp(s)?|http(s)?|git|chrome)://[^ 	]+"
            - comment: "<!--.+?-->"
            - preproc: "<!DOCTYPE.+?>"
            - statement: "\\b(for|function|extends|get|if|import|from|of|instanceof|let|new|return|set)\\b"
            - identifier.var: "([\\$@%]|\\$\\#)\\$*[a-zA-Z_][a-zA-Z0-9_]*"
    
    
